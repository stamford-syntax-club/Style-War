// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	code "github.com/stamford-syntax-club/style-war/backend/app/code"
	mock "github.com/stretchr/testify/mock"
)

// CodeRepo is an autogenerated mock type for the CodeRepo type
type CodeRepo struct {
	mock.Mock
}

// GetCode provides a mock function with given fields: _a0, _a1
func (_m *CodeRepo) GetCode(_a0 int, _a1 string) (*code.Code, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for GetCode")
	}

	var r0 *code.Code
	var r1 error
	if rf, ok := ret.Get(0).(func(int, string) (*code.Code, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(int, string) *code.Code); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*code.Code)
		}
	}

	if rf, ok := ret.Get(1).(func(int, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewCodeRepo creates a new instance of CodeRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCodeRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *CodeRepo {
	mock := &CodeRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
